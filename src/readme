this is the sample for <head first design pattern>

list:
Duck
Proxy
Decorator
Facade
SingleTon
factory
observer
command

-----------------Duck------------------------------------------------
in the first chapter,  the dark demo

-----------------Proxy------------------------------------------------
implement remote proxy steps: p442
1,����Զ�̽ӿ�
   1-1 MyRemote.java
   
2������Զ��ʵ��
   2-1 MyRemoteImpl
   
3, ����Stub��Skeleton

4�� ִ��remiregistry

5����������


-----------------Decorator--------------------------------------------
����չ���ţ����޸Ĺرա�

ȱ�㣺 ����װ����ģʽ�����������������д�����С�ף�����ʵ��̫�࣬���ܻ����ʹ�ô�api����Ա�����š�

decorator1:
         ��Ҫ�ǿ��ȵ�����ֱ�׼�������ͣ�Ȼ��ֱ�������ָ��ϵ����

decorator2:
   java sdk java.io.inputstream ʹ����decorator pattern
    


-----------------Facade------------------------------------------------
���ģʽ�� �����ǽ�������װ�����չ��ܷ�װ��ֻ��Ҫ���������Ľӿڡ�

-----------------Adapter-----------------------------------------------
adapter1:

two category:
               1, Object Adapter: implment interface
               2, Class Adapter: multi-extends
               
adapter2:
               Enumeration----->Iterator
               Iterator----->Enumeration   
           


-----------------SingleTon----------------------------------------------
Note:
      1,�ڶ��߳�ʱ����Ҫͬ��������ͬ����ķ����ܣ����Բ���˫�ؼ�����ķ�ʽ���Ż���
      2��ÿ�����������������һ������ռ䣬������������ϵ������������ͬ������������ܻ����ͬ��һ���࣬�����
        ����������ͬһ����ᱻ���ض�Ρ���������ǣ������ƶ�������������ƶ�ͬһ�����������

-----------------Factory------------------------------------------------
����ģ�Ͷ�������װ����Ĵ���������ģ��ͨ������������ô����Ķ�����ʲô�����ﵽ�����󴴽��Ĺ�̷�װ��Ŀ�ġ�

��Ӧ�ù�������֮�󣬸߲������PizzaStore���͵Ͳ������DifferentPizza��������Pizza����

two category:
1, ��������
   eg��PizzaStore
2, ���󹤳�
   eg.PizzaIngredientFactory



-----------------Observer-----------------------------------------------
observer1: user  the <head first customize observer code>
observer2: user the Java sdk's internal observer code 

different between observer1 and observer2:

the update order is different, the doc is follwing:

public class Observable
extends Object
�����ʾģ����ͼ�����е� observable ���󣬻���˵����ݡ����ɽ������໯����ʾӦ�ó�����Ҫ�۲�Ķ���

һ�� observable ���������һ�������۲��ߡ��۲��߿�����ʵ���� Observer �ӿڵ��������һ�� observable ʵ��ı�󣬵��� Observable �� notifyObservers ������Ӧ�ó����ͨ����ù۲��ߵ� update ������֪ͨ�۲��߸�ʵ�����˸ı䡣

δָ������֪ͨ��˳��Observable �������ṩ��Ĭ��ʵ�ֽ�������ע�����Ҫ��˳����֪ͨ Observers������������ܸı��˳�򣬴Ӷ�ʹ�÷ǹ̶�˳���ڵ������߳��Ϸ���֪ͨ������Ҳ���ܱ�֤�������������ѡ���˳��

ע�⣬��֪ͨ�������߳��޹أ������� Object ��� wait �� notify ������ȫ������



follow the sample code, the result is following:

observer1 result:
ConditionDisplay1 Current condition ---- mTemprature is :1.0 mHumidity is :2.0 mPressure is :3.0 HeatIndex is :6.0
ConditionDisplay2 Current condition ---- mTemprature is :1.0 mHumidity is :2.0 mPressure is :3.0 HeatIndex is :6.0
ConditionDisplay3 Current condition ---- mTemprature is :1.0 mHumidity is :2.0 mPressure is :3.0 HeatIndex is :6.0
ConditionDisplay1 Current condition ---- mTemprature is :4.0 mHumidity is :5.0 mPressure is :6.0 HeatIndex is :120.0
ConditionDisplay2 Current condition ---- mTemprature is :4.0 mHumidity is :5.0 mPressure is :6.0 HeatIndex is :120.0
ConditionDisplay3 Current condition ---- mTemprature is :4.0 mHumidity is :5.0 mPressure is :6.0 HeatIndex is :120.0
ConditionDisplay1 Current condition ---- mTemprature is :7.0 mHumidity is :8.0 mPressure is :9.0 HeatIndex is :504.0
ConditionDisplay2 Current condition ---- mTemprature is :7.0 mHumidity is :8.0 mPressure is :9.0 HeatIndex is :504.0
ConditionDisplay3 Current condition ---- mTemprature is :7.0 mHumidity is :8.0 mPressure is :9.0 HeatIndex is :504.0


observer2 result:
ConditionDisplay3 Current condition ---- mTemprature is :1.0 mHumidity is :2.0 mPressure is :3.0 HeatIndex is :6.0
ConditionDisplay2 Current condition ---- mTemprature is :1.0 mHumidity is :2.0 mPressure is :3.0 HeatIndex is :6.0
ConditionDisplay1 Current condition ---- mTemprature is :1.0 mHumidity is :2.0 mPressure is :3.0 HeatIndex is :6.0
ConditionDisplay3 Current condition ---- mTemprature is :4.0 mHumidity is :5.0 mPressure is :6.0 HeatIndex is :120.0
ConditionDisplay2 Current condition ---- mTemprature is :4.0 mHumidity is :5.0 mPressure is :6.0 HeatIndex is :120.0
ConditionDisplay1 Current condition ---- mTemprature is :4.0 mHumidity is :5.0 mPressure is :6.0 HeatIndex is :120.0
ConditionDisplay3 Current condition ---- mTemprature is :7.0 mHumidity is :8.0 mPressure is :9.0 HeatIndex is :504.0
ConditionDisplay2 Current condition ---- mTemprature is :7.0 mHumidity is :8.0 mPressure is :9.0 HeatIndex is :504.0
ConditionDisplay1 Current condition ---- mTemprature is :7.0 mHumidity is :8.0 mPressure is :9.0 HeatIndex is :504.0


-------------Commander---------------------------------------------------------
封装了动作和总做执行这，调用动作的方法通过实现Command接口获得的方法

Note:
      1,可以实现批量执行命令
      2,可以记录日志，回复日志
      3，可以实现食务相关处理

